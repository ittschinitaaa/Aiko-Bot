global.currentFontStyle = 1

var xStr = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','1','2','3','4','5','6','7','8','9','0']
var yStr = Object.freeze({
1: ['ᥲ','ᑲ','ᥴ','ძ','ᥱ','𝖿','g','һ','і','ȷ','k','ᥣ','m','ᥒ','᥆','⍴','𝗊','r','s','𝗍','ᥙ','᥎','ᥕ','᥊','ᥡ','z','1','2','3','4','5','6','7','8','9','0'],
2: ['ᗩ','ᗷ','ᑕ','ᗪ','ᗴ','ᖴ','ᘜ','ᕼ','I','ᒍ','K','ᒪ','ᗰ','ᑎ','O','ᑭ','ᑫ','ᖇ','Տ','T','ᑌ','ᐯ','ᗯ','᙭','Y','ᘔ','1','2','3','4','5','6','7','8','9','0'],
3: ['𝗮','𝗯','𝗰','𝗱','𝗲','𝗳','𝗴','𝗵','𝗶','𝗷','𝗸','𝗹','𝗺','𝗻','𝗼','𝗽','𝗾','𝗿','𝘀','𝘁','𝘂','𝘃','𝘄','𝘅','𝘆','𝘇','𝟭','𝟮','𝟯','𝟰','𝟱','𝟲','𝟳','𝟴','𝟵','𝟬'],
4: ['ᴀ','ʙ','ᴄ','ᴅ','ᴇ','ꜰ','ɢ','ʜ','ɪ','ᴊ','ᴋ','ʟ','ᴍ','ɴ','ᴏ','ᴘ','q','ʀ','ꜱ','ᴛ','ᴜ','ᴠ','ᴡ','x','ʏ','ᴢ','1','2','3','4','5','6','7','8','9','0'],
5: ['𝑎','𝑏','𝑐','𝑑','𝑒','𝑓','𝑔','ℎ','𝑖','𝑗','𝑘','𝑙','𝑚','𝑛','𝑜','𝑝','𝑞','𝑟','𝑠','𝑡','𝑢','𝑣','𝑤','𝑥','𝑦','𝑧','1','2','3','4','5','6','7','8','9','0'],
6: ['𝐚','𝐛','𝐜','𝐝','𝐞','𝐟','𝐠','𝐡','𝐢','𝐣','𝐤','𝐥','𝐦','𝐧','𝐨','𝐩','𝐪','𝐫','𝐬','𝐭','𝐮','𝐯','𝐰','𝐱','𝐲','𝐳','𝟏','𝟐','𝟑','𝟒','𝟓','𝟔','𝟕','𝟖','𝟗','𝟎'],
7: ['𝒂','𝒃','𝒄','𝒅','𝒆','𝒇','𝒈','𝒉','𝒊','𝒋','𝒌','𝒍','𝒎','𝒏','𝒐','𝒑','𝒒','𝒓','𝒔','𝒕','𝒖','𝒗','𝒘','𝒙','𝒚','𝒛','1','2','3','4','5','6','7','8','9','0'],
8: ['𝙖','𝙗','𝙘','𝙙','𝙚','𝙛','𝙜','𝙝','𝙞','𝙟','𝙠','𝙡','𝙢','𝙣','𝙤','𝙥','𝙦','𝙧','𝙨','𝙩','𝙪','𝙫','𝙬','𝙭','𝙮','𝙯','1','2','3','4','5','6','7','8','9','0'],
9: ['𝚊','𝚋','𝚌','𝚍','𝚎','𝚏','𝚐','𝚑','𝚒','𝚓','𝚔','𝚕','𝚖','𝚗','𝚘','𝚙','𝚚','𝚛','𝚜','𝚝','𝚞','𝚟','𝚠','𝚡','𝚢','𝚣','𝟷','𝟸','𝟹','𝟺','𝟻','𝟼','𝟽','𝟾','𝟿','𝟶'],
10: ['𝘢','𝘣','𝘤','𝘥','𝘦','𝘧','𝘨','𝘩','𝘪','𝘫','𝘬','𝘭','𝘮','𝘯','𝘰','𝘱','𝘲','𝘳','𝘴','𝘵','𝘶','𝘷','𝘸','𝘹','𝘺','𝘻','1','2','3','4','5','6','7','8','9','0'],
11: ['𝖺','𝖻','𝖼','𝖽','𝖾','𝖿','𝗀','𝗁','𝗂','𝗃','𝗄','𝗅','𝗆','𝗇','𝗈','𝗉','𝗊','𝗋','𝗌','𝗍','𝗎','𝗏','𝗐','𝗑','𝗒','𝗓','1','2','3','4','5','6','7','8','9','0'],
12: ['ａ','ｂ','ｃ','ｄ','ｅ','ｆ','ｇ','ｈ','ｉ','ｊ','ｋ','ｌ','ｍ','ｎ','ｏ','ｐ','ｑ','ｒ','ｓ','ｔ','ｕ','ｖ','ｗ','ｘ','ｙ','ｚ','１','２','３','４','５','６','７','８','９','０'],
13: ['ᵃ','ᵇ','ᶜ','ᵈ','ᵉ','ᶠ','ᵍ','ʰ','ⁱ','ʲ','ᵏ','ˡ','ᵐ','ⁿ','ᵒ','ᵖ','ᵠ','ʳ','ˢ','ᵗ','ᵘ','ᵛ','ʷ','ˣ','ʸ','ᶻ','¹','²','³','⁴','⁵','⁶','⁷','⁸','⁹','⁰'],
14: ['𝖆','𝖇','𝖈','𝖉','𝖊','𝖋','𝖌','𝖍','𝖎','𝖏','𝖐','𝖑','𝖒','𝖓','𝖔','𝖕','𝖖','𝖗','𝖘','𝖙','𝖚','𝖛','𝖜','𝖝','𝖞','𝖟','1','2','3','4','5','6','7','8','9','0'],
15: ['Ⓐ','Ⓑ','Ⓒ','Ⓓ','Ⓔ','Ⓕ','Ⓖ','Ⓗ','Ⓘ','Ⓙ','Ⓚ','Ⓛ','Ⓜ','Ⓝ','Ⓞ','Ⓟ','Ⓠ','Ⓡ','Ⓢ','Ⓣ','Ⓤ','Ⓥ','Ⓦ','Ⓧ','Ⓨ','Ⓩ','①','②','③','④','⑤','⑥','⑦','⑧','⑨','⓪'],
16: ['🅐','🅑','🅒','🅓','🅔','🅕','🅖','🅗','🅘','🅙','🅚','🅛','🅜','🅝','🅞','🅟','🅠','🅡','🅢','🅣','🅤','🅥','🅦','🅧','🅨','🅩','1','2','3','4','5','6','7','8','9','0'],
17: ['𝓪','𝓫','𝓬','𝓭','𝓮','𝓯','𝓰','𝓱','𝓲','𝓳','𝓴','𝓵','𝓶','𝓷','𝓸','𝓹','𝓺','𝓻','𝓼','𝓽','𝓾','𝓿','𝔀','𝔁','𝔂','𝔃','1','2','3','4','5','6','7','8','9','0'],
18: ['ⓐ','ⓑ','ⓒ','ⓓ','ⓔ','ⓕ','ⓖ','ⓗ','ⓘ','ⓙ','ⓚ','ⓛ','ⓜ','ⓝ','ⓞ','ⓟ','ⓠ','ⓡ','ⓢ','ⓣ','ⓤ','ⓥ','ⓦ','ⓧ','ⓨ','ⓩ','①','②','③','④','⑤','⑥','⑦','⑧','⑨','⓪'],
19: ['🄰','🄱','🄲','🄳','🄴','🄵','🄶','🄷','🄸','🄹','🄺','🄻','🄼','🄽','🄾','🄿','🅀','🅁','🅂','🅃','🅄','🅅','🅆','🅇','🅈','🅉','①','②','③','④','⑤','⑥','⑦','⑧','⑨','⓪'],
20: ['𝕒','𝕓','𝕔','𝕕','𝕖','𝕗','𝕘','𝕙','𝕚','𝕛','𝕜','𝕝','𝕞','𝕟','𝕠','𝕡','𝕢','𝕣','𝕤','𝕥','𝕦','𝕧','𝕨','𝕩','𝕪','𝕫','𝟙','𝟚','𝟛','𝟜','𝟝','𝟞','𝟟','𝟠','𝟡','𝟘'],
21: ['【a】','【b】','【c】','【d】','【e】','【f】','【g】','【h】','【i】','【j】','【k】','【l】','【m】','【n】','【o】','【p】','【q】','【r】','【s】','【t】','【u】','【v】','【w】','【x】','【y】','【z】', '【1】', '【2】', '【3】', '【4】', '【5】', '【6】', '【7】', '【8】', '【9】', '【0】']
})
global.style = async function styles(text, style = currentFontStyle) {
let replacer = []
xStr.map((v, i) => replacer.push({
original: v,
convert: yStr[style][i]
}))
return text.toLowerCase().split("").map(v => {
const r = replacer.find(x => x.original === v)
return r ? r.convert : v
}).join("")
}
const styleNames = { 1: 'Soft Cursive', 2: 'Fancy Serif Uppercase', 3: 'Bold Sans Serif', 4: 'Small Caps Sans', 5: 'Italic Math Serif', 6: 'Bold Math Serif', 7: 'Calligraphic Italic', 8: 'Bold Monospace Sans', 9: 'Monospace Regular', 10: 'Sans Italic Math', 11: 'Sans Regular Math', 12: 'Fullwidth', 13: 'Superscript Latin', 14: 'Bold Gothic', 15: 'Circled Latin Uppercase', 16: 'Boxed Latin Uppercase', 17: 'Cursive Calligraphy', 18: 'Circled Latin Lowercase', 19: 'Blocky Uppercase Mono', 20: 'Fraktur Gothic', 21: 'Brackets Font' }
async function handler(m, { text, command }) {
switch (command) {
case 'letra':
if (!text) {
return conn.reply(m.chat, '🌸 Por favor, ingresa el texto que quieres transformar.', m)
}
let result = await global.style(text)
await m.react('🕓')
m.reply(result)
setTimeout(async () => await m.react('✅'), 1000)
break
case 'style':
if (!text) {
return conn.reply(m.chat, '🌼 Por favor, ingresa la nueva fuente que quieres establecer <1|2|3>.', m)
}
let num = parseInt(text)
if (!yStr[num]) {
return conn.reply(m.chat, `ꕥ Estilo ${num} no disponible. Usa del 1 al ${Object.keys(yStr).length}.`, m)
}
global.currentFontStyle = num
let name = styleNames[num] || `${num}`
let example = await global.style('Hola mundo', num)
await m.react('✅')
conn.reply(m.chat, `🌸 Estilo de fuente cambiado a *(${name})*.\n> Ejemplo: *${example}*`, m)
break
}}

handler.help = ['letra']
handler.tags = ['fun']
handler.command = ['letra', 'style']

export default handler
